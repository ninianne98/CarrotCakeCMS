#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Carrotware.CMS.UI.Plugins.FAQModule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="CarrotwareCMS")]
	public partial class dbFAQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblFAQ(tblFAQ instance);
    partial void UpdatetblFAQ(tblFAQ instance);
    partial void DeletetblFAQ(tblFAQ instance);
    #endregion
		
		public dbFAQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarrotwareCMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbFAQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFAQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFAQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFAQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblFAQ> tblFAQs
		{
			get
			{
				return this.GetTable<tblFAQ>();
			}
		}
	}
	
	[Table(Name="dbo.tblFAQ")]
	public partial class tblFAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FaqID;
		
		private string _Question;
		
		private string _Answer;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<System.DateTime> _dtStamp;
		
		private System.Nullable<System.Guid> _SiteID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFaqIDChanging(System.Guid value);
    partial void OnFaqIDChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OndtStampChanging(System.Nullable<System.DateTime> value);
    partial void OndtStampChanged();
    partial void OnSiteIDChanging(System.Nullable<System.Guid> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public tblFAQ()
		{
			OnCreated();
		}
		
		[Column(Storage="_FaqID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FaqID
		{
			get
			{
				return this._FaqID;
			}
			set
			{
				if ((this._FaqID != value))
				{
					this.OnFaqIDChanging(value);
					this.SendPropertyChanging();
					this._FaqID = value;
					this.SendPropertyChanged("FaqID");
					this.OnFaqIDChanged();
				}
			}
		}
		
		[Column(Storage="_Question", DbType="VarChar(MAX)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_Answer", DbType="VarChar(MAX)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[Column(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[Column(Storage="_dtStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtStamp
		{
			get
			{
				return this._dtStamp;
			}
			set
			{
				if ((this._dtStamp != value))
				{
					this.OndtStampChanging(value);
					this.SendPropertyChanging();
					this._dtStamp = value;
					this.SendPropertyChanged("dtStamp");
					this.OndtStampChanged();
				}
			}
		}
		
		[Column(Storage="_SiteID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
