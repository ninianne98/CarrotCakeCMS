#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Carrotware.CMS.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarrotwareCMS")]
	public partial class CarrotCMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void InserttblSite(tblSite instance);
    partial void UpdatetblSite(tblSite instance);
    partial void DeletetblSite(tblSite instance);
    partial void InserttblUserSiteMapping(tblUserSiteMapping instance);
    partial void UpdatetblUserSiteMapping(tblUserSiteMapping instance);
    partial void DeletetblUserSiteMapping(tblUserSiteMapping instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void InserttblContent(tblContent instance);
    partial void UpdatetblContent(tblContent instance);
    partial void DeletetblContent(tblContent instance);
    partial void InserttblRootContent(tblRootContent instance);
    partial void UpdatetblRootContent(tblRootContent instance);
    partial void DeletetblRootContent(tblRootContent instance);
    partial void InserttblSerialCache(tblSerialCache instance);
    partial void UpdatetblSerialCache(tblSerialCache instance);
    partial void DeletetblSerialCache(tblSerialCache instance);
    partial void InserttblWidget(tblWidget instance);
    partial void UpdatetblWidget(tblWidget instance);
    partial void DeletetblWidget(tblWidget instance);
    partial void InserttblWidgetData(tblWidgetData instance);
    partial void UpdatetblWidgetData(tblWidgetData instance);
    partial void DeletetblWidgetData(tblWidgetData instance);
    #endregion
		
		public CarrotCMSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarrotwareCMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CarrotCMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarrotCMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarrotCMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarrotCMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<tblSite> tblSites
		{
			get
			{
				return this.GetTable<tblSite>();
			}
		}
		
		public System.Data.Linq.Table<tblUserSiteMapping> tblUserSiteMappings
		{
			get
			{
				return this.GetTable<tblUserSiteMapping>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<tblContent> tblContents
		{
			get
			{
				return this.GetTable<tblContent>();
			}
		}
		
		public System.Data.Linq.Table<tblRootContent> tblRootContents
		{
			get
			{
				return this.GetTable<tblRootContent>();
			}
		}
		
		public System.Data.Linq.Table<tblSerialCache> tblSerialCaches
		{
			get
			{
				return this.GetTable<tblSerialCache>();
			}
		}
		
		public System.Data.Linq.Table<tblWidget> tblWidgets
		{
			get
			{
				return this.GetTable<tblWidget>();
			}
		}
		
		public System.Data.Linq.Table<tblWidgetData> tblWidgetDatas
		{
			get
			{
				return this.GetTable<tblWidgetData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<tblUserSiteMapping> _tblUserSiteMappings;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<tblContent> _tblContents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._tblUserSiteMappings = new EntitySet<tblUserSiteMapping>(new Action<tblUserSiteMapping>(this.attach_tblUserSiteMappings), new Action<tblUserSiteMapping>(this.detach_tblUserSiteMappings));
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._tblContents = new EntitySet<tblContent>(new Action<tblContent>(this.attach_tblContents), new Action<tblContent>(this.detach_tblContents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_tblUserSiteMapping", Storage="_tblUserSiteMappings", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<tblUserSiteMapping> tblUserSiteMappings
		{
			get
			{
				return this._tblUserSiteMappings;
			}
			set
			{
				this._tblUserSiteMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_tblContent", Storage="_tblContents", ThisKey="UserId", OtherKey="EditUserId")]
		public EntitySet<tblContent> tblContents
		{
			get
			{
				return this._tblContents;
			}
			set
			{
				this._tblContents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUserSiteMappings(tblUserSiteMapping entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_tblUserSiteMappings(tblUserSiteMapping entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_tblContents(tblContent entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_tblContents(tblContent entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSites")]
	public partial class tblSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SiteID;
		
		private string _MetaKeyword;
		
		private string _MetaDescription;
		
		private string _SiteName;
		
		private string _SiteFolder;
		
		private string _MainURL;
		
		private bool _BlockIndex;
		
		private EntitySet<tblUserSiteMapping> _tblUserSiteMappings;
		
		private EntitySet<tblRootContent> _tblRootContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnSiteFolderChanging(string value);
    partial void OnSiteFolderChanged();
    partial void OnMainURLChanging(string value);
    partial void OnMainURLChanged();
    partial void OnBlockIndexChanging(bool value);
    partial void OnBlockIndexChanged();
    #endregion
		
		public tblSite()
		{
			this._tblUserSiteMappings = new EntitySet<tblUserSiteMapping>(new Action<tblUserSiteMapping>(this.attach_tblUserSiteMappings), new Action<tblUserSiteMapping>(this.detach_tblUserSiteMappings));
			this._tblRootContent = new EntitySet<tblRootContent>(new Action<tblRootContent>(this.attach_tblRootContent), new Action<tblRootContent>(this.detach_tblRootContent));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="VarChar(1000)")]
		public string MetaKeyword
		{
			get
			{
				return this._MetaKeyword;
			}
			set
			{
				if ((this._MetaKeyword != value))
				{
					this.OnMetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._MetaKeyword = value;
					this.SendPropertyChanged("MetaKeyword");
					this.OnMetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="VarChar(2000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="VarChar(256)")]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteFolder", DbType="VarChar(256)")]
		public string SiteFolder
		{
			get
			{
				return this._SiteFolder;
			}
			set
			{
				if ((this._SiteFolder != value))
				{
					this.OnSiteFolderChanging(value);
					this.SendPropertyChanging();
					this._SiteFolder = value;
					this.SendPropertyChanged("SiteFolder");
					this.OnSiteFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainURL", DbType="VarChar(256)")]
		public string MainURL
		{
			get
			{
				return this._MainURL;
			}
			set
			{
				if ((this._MainURL != value))
				{
					this.OnMainURLChanging(value);
					this.SendPropertyChanging();
					this._MainURL = value;
					this.SendPropertyChanged("MainURL");
					this.OnMainURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockIndex", DbType="Bit")]
		public bool BlockIndex
		{
			get
			{
				return this._BlockIndex;
			}
			set
			{
				if ((this._BlockIndex != value))
				{
					this.OnBlockIndexChanging(value);
					this.SendPropertyChanging();
					this._BlockIndex = value;
					this.SendPropertyChanged("BlockIndex");
					this.OnBlockIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSite_tblUserSiteMapping", Storage="_tblUserSiteMappings", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<tblUserSiteMapping> tblUserSiteMappings
		{
			get
			{
				return this._tblUserSiteMappings;
			}
			set
			{
				this._tblUserSiteMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSite_tblRootContent", Storage="_tblRootContent", ThisKey="SiteID", OtherKey="SiteID")]
		public EntitySet<tblRootContent> tblRootContent
		{
			get
			{
				return this._tblRootContent;
			}
			set
			{
				this._tblRootContent.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUserSiteMappings(tblUserSiteMapping entity)
		{
			this.SendPropertyChanging();
			entity.tblSite = this;
		}
		
		private void detach_tblUserSiteMappings(tblUserSiteMapping entity)
		{
			this.SendPropertyChanging();
			entity.tblSite = null;
		}
		
		private void attach_tblRootContent(tblRootContent entity)
		{
			this.SendPropertyChanging();
			entity.tblSite = this;
		}
		
		private void detach_tblRootContent(tblRootContent entity)
		{
			this.SendPropertyChanging();
			entity.tblSite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserSiteMapping")]
	public partial class tblUserSiteMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserSiteMappingID;
		
		private System.Guid _UserId;
		
		private System.Guid _SiteID;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<tblSite> _tblSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserSiteMappingIDChanging(System.Guid value);
    partial void OnUserSiteMappingIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    #endregion
		
		public tblUserSiteMapping()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._tblSite = default(EntityRef<tblSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSiteMappingID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserSiteMappingID
		{
			get
			{
				return this._UserSiteMappingID;
			}
			set
			{
				if ((this._UserSiteMappingID != value))
				{
					this.OnUserSiteMappingIDChanging(value);
					this.SendPropertyChanging();
					this._UserSiteMappingID = value;
					this.SendPropertyChanged("UserSiteMappingID");
					this.OnUserSiteMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._tblSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_tblUserSiteMapping", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.tblUserSiteMappings.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.tblUserSiteMappings.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSite_tblUserSiteMapping", Storage="_tblSite", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public tblSite tblSite
		{
			get
			{
				return this._tblSite.Entity;
			}
			set
			{
				tblSite previousValue = this._tblSite.Entity;
				if (((previousValue != value) 
							|| (this._tblSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSite.Entity = null;
						previousValue.tblUserSiteMappings.Remove(this);
					}
					this._tblSite.Entity = value;
					if ((value != null))
					{
						value.tblUserSiteMappings.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("tblSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblContent")]
	public partial class tblContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ContentID;
		
		private System.Guid _Root_ContentID;
		
		private System.Nullable<System.Guid> _Parent_ContentID;
		
		private System.Nullable<bool> _IsLatestVersion;
		
		private string _TitleBar;
		
		private string _NavMenuText;
		
		private string _PageHead;
		
		private string _PageText;
		
		private string _LeftPageText;
		
		private string _RightPageText;
		
		private System.Nullable<int> _NavOrder;
		
		private System.Nullable<System.Guid> _EditUserId;
		
		private System.DateTime _EditDate;
		
		private string _TemplateFile;
		
		private string _MetaKeyword;
		
		private string _MetaDescription;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<tblRootContent> _tblRootContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentIDChanging(System.Guid value);
    partial void OnContentIDChanged();
    partial void OnRoot_ContentIDChanging(System.Guid value);
    partial void OnRoot_ContentIDChanged();
    partial void OnParent_ContentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParent_ContentIDChanged();
    partial void OnIsLatestVersionChanging(System.Nullable<bool> value);
    partial void OnIsLatestVersionChanged();
    partial void OnTitleBarChanging(string value);
    partial void OnTitleBarChanged();
    partial void OnNavMenuTextChanging(string value);
    partial void OnNavMenuTextChanged();
    partial void OnPageHeadChanging(string value);
    partial void OnPageHeadChanged();
    partial void OnPageTextChanging(string value);
    partial void OnPageTextChanged();
    partial void OnLeftPageTextChanging(string value);
    partial void OnLeftPageTextChanged();
    partial void OnRightPageTextChanging(string value);
    partial void OnRightPageTextChanged();
    partial void OnNavOrderChanging(System.Nullable<int> value);
    partial void OnNavOrderChanged();
    partial void OnEditUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnEditUserIdChanged();
    partial void OnEditDateChanging(System.DateTime value);
    partial void OnEditDateChanged();
    partial void OnTemplateFileChanging(string value);
    partial void OnTemplateFileChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    #endregion
		
		public tblContent()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._tblRootContent = default(EntityRef<tblRootContent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ContentID
		{
			get
			{
				return this._ContentID;
			}
			set
			{
				if ((this._ContentID != value))
				{
					this.OnContentIDChanging(value);
					this.SendPropertyChanging();
					this._ContentID = value;
					this.SendPropertyChanged("ContentID");
					this.OnContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root_ContentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Root_ContentID
		{
			get
			{
				return this._Root_ContentID;
			}
			set
			{
				if ((this._Root_ContentID != value))
				{
					if (this._tblRootContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoot_ContentIDChanging(value);
					this.SendPropertyChanging();
					this._Root_ContentID = value;
					this.SendPropertyChanged("Root_ContentID");
					this.OnRoot_ContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_ContentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent_ContentID
		{
			get
			{
				return this._Parent_ContentID;
			}
			set
			{
				if ((this._Parent_ContentID != value))
				{
					this.OnParent_ContentIDChanging(value);
					this.SendPropertyChanging();
					this._Parent_ContentID = value;
					this.SendPropertyChanged("Parent_ContentID");
					this.OnParent_ContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLatestVersion", DbType="Bit")]
		public System.Nullable<bool> IsLatestVersion
		{
			get
			{
				return this._IsLatestVersion;
			}
			set
			{
				if ((this._IsLatestVersion != value))
				{
					this.OnIsLatestVersionChanging(value);
					this.SendPropertyChanging();
					this._IsLatestVersion = value;
					this.SendPropertyChanged("IsLatestVersion");
					this.OnIsLatestVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleBar", DbType="VarChar(256)")]
		public string TitleBar
		{
			get
			{
				return this._TitleBar;
			}
			set
			{
				if ((this._TitleBar != value))
				{
					this.OnTitleBarChanging(value);
					this.SendPropertyChanging();
					this._TitleBar = value;
					this.SendPropertyChanged("TitleBar");
					this.OnTitleBarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavMenuText", DbType="VarChar(256)")]
		public string NavMenuText
		{
			get
			{
				return this._NavMenuText;
			}
			set
			{
				if ((this._NavMenuText != value))
				{
					this.OnNavMenuTextChanging(value);
					this.SendPropertyChanging();
					this._NavMenuText = value;
					this.SendPropertyChanged("NavMenuText");
					this.OnNavMenuTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageHead", DbType="VarChar(256)")]
		public string PageHead
		{
			get
			{
				return this._PageHead;
			}
			set
			{
				if ((this._PageHead != value))
				{
					this.OnPageHeadChanging(value);
					this.SendPropertyChanging();
					this._PageHead = value;
					this.SendPropertyChanged("PageHead");
					this.OnPageHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageText", DbType="VarChar(MAX)")]
		public string PageText
		{
			get
			{
				return this._PageText;
			}
			set
			{
				if ((this._PageText != value))
				{
					this.OnPageTextChanging(value);
					this.SendPropertyChanging();
					this._PageText = value;
					this.SendPropertyChanged("PageText");
					this.OnPageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftPageText", DbType="VarChar(MAX)")]
		public string LeftPageText
		{
			get
			{
				return this._LeftPageText;
			}
			set
			{
				if ((this._LeftPageText != value))
				{
					this.OnLeftPageTextChanging(value);
					this.SendPropertyChanging();
					this._LeftPageText = value;
					this.SendPropertyChanged("LeftPageText");
					this.OnLeftPageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightPageText", DbType="VarChar(MAX)")]
		public string RightPageText
		{
			get
			{
				return this._RightPageText;
			}
			set
			{
				if ((this._RightPageText != value))
				{
					this.OnRightPageTextChanging(value);
					this.SendPropertyChanging();
					this._RightPageText = value;
					this.SendPropertyChanged("RightPageText");
					this.OnRightPageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavOrder", DbType="Int")]
		public System.Nullable<int> NavOrder
		{
			get
			{
				return this._NavOrder;
			}
			set
			{
				if ((this._NavOrder != value))
				{
					this.OnNavOrderChanging(value);
					this.SendPropertyChanging();
					this._NavOrder = value;
					this.SendPropertyChanged("NavOrder");
					this.OnNavOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EditUserId
		{
			get
			{
				return this._EditUserId;
			}
			set
			{
				if ((this._EditUserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEditUserIdChanging(value);
					this.SendPropertyChanging();
					this._EditUserId = value;
					this.SendPropertyChanged("EditUserId");
					this.OnEditUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="DateTime NOT NULL")]
		public System.DateTime EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateFile", DbType="NVarChar(256)")]
		public string TemplateFile
		{
			get
			{
				return this._TemplateFile;
			}
			set
			{
				if ((this._TemplateFile != value))
				{
					this.OnTemplateFileChanging(value);
					this.SendPropertyChanging();
					this._TemplateFile = value;
					this.SendPropertyChanged("TemplateFile");
					this.OnTemplateFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="VarChar(1000)")]
		public string MetaKeyword
		{
			get
			{
				return this._MetaKeyword;
			}
			set
			{
				if ((this._MetaKeyword != value))
				{
					this.OnMetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._MetaKeyword = value;
					this.SendPropertyChanged("MetaKeyword");
					this.OnMetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="VarChar(2000)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_tblContent", Storage="_aspnet_User", ThisKey="EditUserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.tblContents.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.tblContents.Add(this);
						this._EditUserId = value.UserId;
					}
					else
					{
						this._EditUserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRootContent_tblContent", Storage="_tblRootContent", ThisKey="Root_ContentID", OtherKey="Root_ContentID", IsForeignKey=true)]
		public tblRootContent tblRootContent
		{
			get
			{
				return this._tblRootContent.Entity;
			}
			set
			{
				tblRootContent previousValue = this._tblRootContent.Entity;
				if (((previousValue != value) 
							|| (this._tblRootContent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblRootContent.Entity = null;
						previousValue.tblContents.Remove(this);
					}
					this._tblRootContent.Entity = value;
					if ((value != null))
					{
						value.tblContents.Add(this);
						this._Root_ContentID = value.Root_ContentID;
					}
					else
					{
						this._Root_ContentID = default(System.Guid);
					}
					this.SendPropertyChanged("tblRootContent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRootContent")]
	public partial class tblRootContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Root_ContentID;
		
		private System.Guid _SiteID;
		
		private System.Nullable<System.DateTime> _EditHeartbeat;
		
		private System.Nullable<System.Guid> _Heartbeat_UserId;
		
		private bool _PageActive;
		
		private string _FileName;
		
		private EntitySet<tblContent> _tblContents;
		
		private EntitySet<tblWidget> _tblWidgets;
		
		private EntityRef<tblSite> _tblSite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoot_ContentIDChanging(System.Guid value);
    partial void OnRoot_ContentIDChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnEditHeartbeatChanging(System.Nullable<System.DateTime> value);
    partial void OnEditHeartbeatChanged();
    partial void OnHeartbeat_UserIdChanging(System.Nullable<System.Guid> value);
    partial void OnHeartbeat_UserIdChanged();
    partial void OnPageActiveChanging(bool value);
    partial void OnPageActiveChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public tblRootContent()
		{
			this._tblContents = new EntitySet<tblContent>(new Action<tblContent>(this.attach_tblContents), new Action<tblContent>(this.detach_tblContents));
			this._tblWidgets = new EntitySet<tblWidget>(new Action<tblWidget>(this.attach_tblWidgets), new Action<tblWidget>(this.detach_tblWidgets));
			this._tblSite = default(EntityRef<tblSite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root_ContentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Root_ContentID
		{
			get
			{
				return this._Root_ContentID;
			}
			set
			{
				if ((this._Root_ContentID != value))
				{
					this.OnRoot_ContentIDChanging(value);
					this.SendPropertyChanging();
					this._Root_ContentID = value;
					this.SendPropertyChanged("Root_ContentID");
					this.OnRoot_ContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					if (this._tblSite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditHeartbeat", DbType="DateTime")]
		public System.Nullable<System.DateTime> EditHeartbeat
		{
			get
			{
				return this._EditHeartbeat;
			}
			set
			{
				if ((this._EditHeartbeat != value))
				{
					this.OnEditHeartbeatChanging(value);
					this.SendPropertyChanging();
					this._EditHeartbeat = value;
					this.SendPropertyChanged("EditHeartbeat");
					this.OnEditHeartbeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heartbeat_UserId", DbType="UniqueIdentifier NULL")]
		public System.Nullable<System.Guid> Heartbeat_UserId
		{
			get
			{
				return this._Heartbeat_UserId;
			}
			set
			{
				if ((this._Heartbeat_UserId != value))
				{
					this.OnHeartbeat_UserIdChanging(value);
					this.SendPropertyChanging();
					this._Heartbeat_UserId = value;
					this.SendPropertyChanged("Heartbeat_UserId");
					this.OnHeartbeat_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageActive", DbType="Bit")]
		public bool PageActive
		{
			get
			{
				return this._PageActive;
			}
			set
			{
				if ((this._PageActive != value))
				{
					this.OnPageActiveChanging(value);
					this.SendPropertyChanging();
					this._PageActive = value;
					this.SendPropertyChanged("PageActive");
					this.OnPageActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(256)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRootContent_tblContent", Storage="_tblContents", ThisKey="Root_ContentID", OtherKey="Root_ContentID")]
		public EntitySet<tblContent> tblContents
		{
			get
			{
				return this._tblContents;
			}
			set
			{
				this._tblContents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRootContent_tblWidget", Storage="_tblWidgets", ThisKey="Root_ContentID", OtherKey="Root_ContentID")]
		public EntitySet<tblWidget> tblWidgets
		{
			get
			{
				return this._tblWidgets;
			}
			set
			{
				this._tblWidgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSite_tblRootContent", Storage="_tblSite", ThisKey="SiteID", OtherKey="SiteID", IsForeignKey=true)]
		public tblSite tblSite
		{
			get
			{
				return this._tblSite.Entity;
			}
			set
			{
				tblSite previousValue = this._tblSite.Entity;
				if (((previousValue != value) 
							|| (this._tblSite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSite.Entity = null;
						previousValue.tblRootContent.Remove(this);
					}
					this._tblSite.Entity = value;
					if ((value != null))
					{
						value.tblRootContent.Add(this);
						this._SiteID = value.SiteID;
					}
					else
					{
						this._SiteID = default(System.Guid);
					}
					this.SendPropertyChanged("tblSite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblContents(tblContent entity)
		{
			this.SendPropertyChanging();
			entity.tblRootContent = this;
		}
		
		private void detach_tblContents(tblContent entity)
		{
			this.SendPropertyChanging();
			entity.tblRootContent = null;
		}
		
		private void attach_tblWidgets(tblWidget entity)
		{
			this.SendPropertyChanging();
			entity.tblRootContent = this;
		}
		
		private void detach_tblWidgets(tblWidget entity)
		{
			this.SendPropertyChanging();
			entity.tblRootContent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSerialCache")]
	public partial class tblSerialCache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SerialCacheID;
		
		private System.Guid _SiteID;
		
		private System.Guid _ItemID;
		
		private System.Guid _EditUserId;
		
		private string _SerializedData;
		
		private string _KeyType;
		
		private System.DateTime _EditDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialCacheIDChanging(System.Guid value);
    partial void OnSerialCacheIDChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnItemIDChanging(System.Guid value);
    partial void OnItemIDChanged();
    partial void OnEditUserIdChanging(System.Guid value);
    partial void OnEditUserIdChanged();
    partial void OnSerializedDataChanging(string value);
    partial void OnSerializedDataChanged();
    partial void OnKeyTypeChanging(string value);
    partial void OnKeyTypeChanged();
    partial void OnEditDateChanging(System.DateTime value);
    partial void OnEditDateChanged();
    #endregion
		
		public tblSerialCache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialCacheID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SerialCacheID
		{
			get
			{
				return this._SerialCacheID;
			}
			set
			{
				if ((this._SerialCacheID != value))
				{
					this.OnSerialCacheIDChanging(value);
					this.SendPropertyChanging();
					this._SerialCacheID = value;
					this.SendPropertyChanged("SerialCacheID");
					this.OnSerialCacheIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EditUserId
		{
			get
			{
				return this._EditUserId;
			}
			set
			{
				if ((this._EditUserId != value))
				{
					this.OnEditUserIdChanging(value);
					this.SendPropertyChanging();
					this._EditUserId = value;
					this.SendPropertyChanged("EditUserId");
					this.OnEditUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerializedData", DbType="VarChar(MAX)")]
		public string SerializedData
		{
			get
			{
				return this._SerializedData;
			}
			set
			{
				if ((this._SerializedData != value))
				{
					this.OnSerializedDataChanging(value);
					this.SendPropertyChanging();
					this._SerializedData = value;
					this.SendPropertyChanged("SerializedData");
					this.OnSerializedDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyType", DbType="VarChar(256)")]
		public string KeyType
		{
			get
			{
				return this._KeyType;
			}
			set
			{
				if ((this._KeyType != value))
				{
					this.OnKeyTypeChanging(value);
					this.SendPropertyChanging();
					this._KeyType = value;
					this.SendPropertyChanged("KeyType");
					this.OnKeyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="DateTime NOT NULL")]
		public System.DateTime EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWidget")]
	public partial class tblWidget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Root_WidgetID;
		
		private System.Guid _Root_ContentID;
		
		private int _WidgetOrder;
		
		private string _PlaceholderName;
		
		private string _ControlPath;
		
		private bool _WidgetActive;
		
		private EntitySet<tblWidgetData> _tblWidgetDatas;
		
		private EntityRef<tblRootContent> _tblRootContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoot_WidgetIDChanging(System.Guid value);
    partial void OnRoot_WidgetIDChanged();
    partial void OnRoot_ContentIDChanging(System.Guid value);
    partial void OnRoot_ContentIDChanged();
    partial void OnWidgetOrderChanging(int value);
    partial void OnWidgetOrderChanged();
    partial void OnPlaceholderNameChanging(string value);
    partial void OnPlaceholderNameChanged();
    partial void OnControlPathChanging(string value);
    partial void OnControlPathChanged();
    partial void OnWidgetActiveChanging(bool value);
    partial void OnWidgetActiveChanged();
    #endregion
		
		public tblWidget()
		{
			this._tblWidgetDatas = new EntitySet<tblWidgetData>(new Action<tblWidgetData>(this.attach_tblWidgetDatas), new Action<tblWidgetData>(this.detach_tblWidgetDatas));
			this._tblRootContent = default(EntityRef<tblRootContent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root_WidgetID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Root_WidgetID
		{
			get
			{
				return this._Root_WidgetID;
			}
			set
			{
				if ((this._Root_WidgetID != value))
				{
					this.OnRoot_WidgetIDChanging(value);
					this.SendPropertyChanging();
					this._Root_WidgetID = value;
					this.SendPropertyChanged("Root_WidgetID");
					this.OnRoot_WidgetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root_ContentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Root_ContentID
		{
			get
			{
				return this._Root_ContentID;
			}
			set
			{
				if ((this._Root_ContentID != value))
				{
					if (this._tblRootContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoot_ContentIDChanging(value);
					this.SendPropertyChanging();
					this._Root_ContentID = value;
					this.SendPropertyChanged("Root_ContentID");
					this.OnRoot_ContentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidgetOrder", DbType="Int NOT NULL")]
		public int WidgetOrder
		{
			get
			{
				return this._WidgetOrder;
			}
			set
			{
				if ((this._WidgetOrder != value))
				{
					this.OnWidgetOrderChanging(value);
					this.SendPropertyChanging();
					this._WidgetOrder = value;
					this.SendPropertyChanged("WidgetOrder");
					this.OnWidgetOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceholderName", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string PlaceholderName
		{
			get
			{
				return this._PlaceholderName;
			}
			set
			{
				if ((this._PlaceholderName != value))
				{
					this.OnPlaceholderNameChanging(value);
					this.SendPropertyChanging();
					this._PlaceholderName = value;
					this.SendPropertyChanged("PlaceholderName");
					this.OnPlaceholderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPath", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string ControlPath
		{
			get
			{
				return this._ControlPath;
			}
			set
			{
				if ((this._ControlPath != value))
				{
					this.OnControlPathChanging(value);
					this.SendPropertyChanging();
					this._ControlPath = value;
					this.SendPropertyChanged("ControlPath");
					this.OnControlPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidgetActive", DbType="Bit NOT NULL")]
		public bool WidgetActive
		{
			get
			{
				return this._WidgetActive;
			}
			set
			{
				if ((this._WidgetActive != value))
				{
					this.OnWidgetActiveChanging(value);
					this.SendPropertyChanging();
					this._WidgetActive = value;
					this.SendPropertyChanged("WidgetActive");
					this.OnWidgetActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWidget_tblWidgetData", Storage="_tblWidgetDatas", ThisKey="Root_WidgetID", OtherKey="Root_WidgetID")]
		public EntitySet<tblWidgetData> tblWidgetDatas
		{
			get
			{
				return this._tblWidgetDatas;
			}
			set
			{
				this._tblWidgetDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRootContent_tblWidget", Storage="_tblRootContent", ThisKey="Root_ContentID", OtherKey="Root_ContentID", IsForeignKey=true)]
		public tblRootContent tblRootContent
		{
			get
			{
				return this._tblRootContent.Entity;
			}
			set
			{
				tblRootContent previousValue = this._tblRootContent.Entity;
				if (((previousValue != value) 
							|| (this._tblRootContent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblRootContent.Entity = null;
						previousValue.tblWidgets.Remove(this);
					}
					this._tblRootContent.Entity = value;
					if ((value != null))
					{
						value.tblWidgets.Add(this);
						this._Root_ContentID = value.Root_ContentID;
					}
					else
					{
						this._Root_ContentID = default(System.Guid);
					}
					this.SendPropertyChanged("tblRootContent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblWidgetDatas(tblWidgetData entity)
		{
			this.SendPropertyChanging();
			entity.tblWidget = this;
		}
		
		private void detach_tblWidgetDatas(tblWidgetData entity)
		{
			this.SendPropertyChanging();
			entity.tblWidget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWidgetData")]
	public partial class tblWidgetData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WidgetDataID;
		
		private System.Guid _Root_WidgetID;
		
		private System.Nullable<bool> _IsLatestVersion;
		
		private System.DateTime _EditDate;
		
		private string _ControlProperties;
		
		private EntityRef<tblWidget> _tblWidget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWidgetDataIDChanging(System.Guid value);
    partial void OnWidgetDataIDChanged();
    partial void OnRoot_WidgetIDChanging(System.Guid value);
    partial void OnRoot_WidgetIDChanged();
    partial void OnIsLatestVersionChanging(System.Nullable<bool> value);
    partial void OnIsLatestVersionChanged();
    partial void OnEditDateChanging(System.DateTime value);
    partial void OnEditDateChanged();
    partial void OnControlPropertiesChanging(string value);
    partial void OnControlPropertiesChanged();
    #endregion
		
		public tblWidgetData()
		{
			this._tblWidget = default(EntityRef<tblWidget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidgetDataID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WidgetDataID
		{
			get
			{
				return this._WidgetDataID;
			}
			set
			{
				if ((this._WidgetDataID != value))
				{
					this.OnWidgetDataIDChanging(value);
					this.SendPropertyChanging();
					this._WidgetDataID = value;
					this.SendPropertyChanged("WidgetDataID");
					this.OnWidgetDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root_WidgetID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Root_WidgetID
		{
			get
			{
				return this._Root_WidgetID;
			}
			set
			{
				if ((this._Root_WidgetID != value))
				{
					if (this._tblWidget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoot_WidgetIDChanging(value);
					this.SendPropertyChanging();
					this._Root_WidgetID = value;
					this.SendPropertyChanged("Root_WidgetID");
					this.OnRoot_WidgetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLatestVersion", DbType="Bit")]
		public System.Nullable<bool> IsLatestVersion
		{
			get
			{
				return this._IsLatestVersion;
			}
			set
			{
				if ((this._IsLatestVersion != value))
				{
					this.OnIsLatestVersionChanging(value);
					this.SendPropertyChanging();
					this._IsLatestVersion = value;
					this.SendPropertyChanged("IsLatestVersion");
					this.OnIsLatestVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="DateTime NOT NULL")]
		public System.DateTime EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlProperties", DbType="VarChar(MAX)")]
		public string ControlProperties
		{
			get
			{
				return this._ControlProperties;
			}
			set
			{
				if ((this._ControlProperties != value))
				{
					this.OnControlPropertiesChanging(value);
					this.SendPropertyChanging();
					this._ControlProperties = value;
					this.SendPropertyChanged("ControlProperties");
					this.OnControlPropertiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWidget_tblWidgetData", Storage="_tblWidget", ThisKey="Root_WidgetID", OtherKey="Root_WidgetID", IsForeignKey=true)]
		public tblWidget tblWidget
		{
			get
			{
				return this._tblWidget.Entity;
			}
			set
			{
				tblWidget previousValue = this._tblWidget.Entity;
				if (((previousValue != value) 
							|| (this._tblWidget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWidget.Entity = null;
						previousValue.tblWidgetDatas.Remove(this);
					}
					this._tblWidget.Entity = value;
					if ((value != null))
					{
						value.tblWidgetDatas.Add(this);
						this._Root_WidgetID = value.Root_WidgetID;
					}
					else
					{
						this._Root_WidgetID = default(System.Guid);
					}
					this.SendPropertyChanged("tblWidget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
