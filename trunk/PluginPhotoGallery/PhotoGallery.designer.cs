#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Carrotware.CMS.UI.Plugins.PhotoGallery
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarrotwareCMS")]
	public partial class PhotoGalleryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblGallery(tblGallery instance);
    partial void UpdatetblGallery(tblGallery instance);
    partial void DeletetblGallery(tblGallery instance);
    partial void InserttblGalleryImage(tblGalleryImage instance);
    partial void UpdatetblGalleryImage(tblGalleryImage instance);
    partial void DeletetblGalleryImage(tblGalleryImage instance);
    #endregion
		
		public PhotoGalleryDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarrotwareCMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoGalleryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoGalleryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoGalleryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoGalleryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblGallery> tblGalleries
		{
			get
			{
				return this.GetTable<tblGallery>();
			}
		}
		
		public System.Data.Linq.Table<tblGalleryImage> tblGalleryImages
		{
			get
			{
				return this.GetTable<tblGalleryImage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGallery")]
	public partial class tblGallery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GalleryID;
		
		private string _GalleryTitle;
		
		private System.Nullable<System.Guid> _SiteID;
		
		private EntitySet<tblGalleryImage> _tblGalleryImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalleryIDChanging(System.Guid value);
    partial void OnGalleryIDChanged();
    partial void OnGalleryTitleChanging(string value);
    partial void OnGalleryTitleChanged();
    partial void OnSiteIDChanging(System.Nullable<System.Guid> value);
    partial void OnSiteIDChanged();
    #endregion
		
		public tblGallery()
		{
			this._tblGalleryImages = new EntitySet<tblGalleryImage>(new Action<tblGalleryImage>(this.attach_tblGalleryImages), new Action<tblGalleryImage>(this.detach_tblGalleryImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GalleryID
		{
			get
			{
				return this._GalleryID;
			}
			set
			{
				if ((this._GalleryID != value))
				{
					this.OnGalleryIDChanging(value);
					this.SendPropertyChanging();
					this._GalleryID = value;
					this.SendPropertyChanged("GalleryID");
					this.OnGalleryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryTitle", DbType="VarChar(255)")]
		public string GalleryTitle
		{
			get
			{
				return this._GalleryTitle;
			}
			set
			{
				if ((this._GalleryTitle != value))
				{
					this.OnGalleryTitleChanging(value);
					this.SendPropertyChanging();
					this._GalleryTitle = value;
					this.SendPropertyChanged("GalleryTitle");
					this.OnGalleryTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGallery_tblGalleryImage", Storage="_tblGalleryImages", ThisKey="GalleryID", OtherKey="GalleryID")]
		public EntitySet<tblGalleryImage> tblGalleryImages
		{
			get
			{
				return this._tblGalleryImages;
			}
			set
			{
				this._tblGalleryImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblGalleryImages(tblGalleryImage entity)
		{
			this.SendPropertyChanging();
			entity.tblGallery = this;
		}
		
		private void detach_tblGalleryImages(tblGalleryImage entity)
		{
			this.SendPropertyChanging();
			entity.tblGallery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGalleryImage")]
	public partial class tblGalleryImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GalleryImageID;
		
		private string _GalleryImage;
		
		private System.Nullable<int> _ImageOrder;
		
		private System.Nullable<System.Guid> _GalleryID;
		
		private EntityRef<tblGallery> _tblGallery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalleryImageIDChanging(System.Guid value);
    partial void OnGalleryImageIDChanged();
    partial void OnGalleryImageChanging(string value);
    partial void OnGalleryImageChanged();
    partial void OnImageOrderChanging(System.Nullable<int> value);
    partial void OnImageOrderChanged();
    partial void OnGalleryIDChanging(System.Nullable<System.Guid> value);
    partial void OnGalleryIDChanged();
    #endregion
		
		public tblGalleryImage()
		{
			this._tblGallery = default(EntityRef<tblGallery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryImageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GalleryImageID
		{
			get
			{
				return this._GalleryImageID;
			}
			set
			{
				if ((this._GalleryImageID != value))
				{
					this.OnGalleryImageIDChanging(value);
					this.SendPropertyChanging();
					this._GalleryImageID = value;
					this.SendPropertyChanged("GalleryImageID");
					this.OnGalleryImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryImage", DbType="VarChar(512)")]
		public string GalleryImage
		{
			get
			{
				return this._GalleryImage;
			}
			set
			{
				if ((this._GalleryImage != value))
				{
					this.OnGalleryImageChanging(value);
					this.SendPropertyChanging();
					this._GalleryImage = value;
					this.SendPropertyChanged("GalleryImage");
					this.OnGalleryImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageOrder", DbType="Int")]
		public System.Nullable<int> ImageOrder
		{
			get
			{
				return this._ImageOrder;
			}
			set
			{
				if ((this._ImageOrder != value))
				{
					this.OnImageOrderChanging(value);
					this.SendPropertyChanging();
					this._ImageOrder = value;
					this.SendPropertyChanged("ImageOrder");
					this.OnImageOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GalleryID
		{
			get
			{
				return this._GalleryID;
			}
			set
			{
				if ((this._GalleryID != value))
				{
					if (this._tblGallery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGalleryIDChanging(value);
					this.SendPropertyChanging();
					this._GalleryID = value;
					this.SendPropertyChanged("GalleryID");
					this.OnGalleryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGallery_tblGalleryImage", Storage="_tblGallery", ThisKey="GalleryID", OtherKey="GalleryID", IsForeignKey=true)]
		public tblGallery tblGallery
		{
			get
			{
				return this._tblGallery.Entity;
			}
			set
			{
				tblGallery previousValue = this._tblGallery.Entity;
				if (((previousValue != value) 
							|| (this._tblGallery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGallery.Entity = null;
						previousValue.tblGalleryImages.Remove(this);
					}
					this._tblGallery.Entity = value;
					if ((value != null))
					{
						value.tblGalleryImages.Add(this);
						this._GalleryID = value.GalleryID;
					}
					else
					{
						this._GalleryID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("tblGallery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
